---
title: '2016 QCon 小结'
layout: post
categories: 技术
tags:
    - QCon
---


## 编程语言演变对开发者的意义 

上午的keynote是由《七周七语言》一书的作者 Paul Butcher 带来。老外做演讲还是挺有意思的，幽默、有条理。Paul介绍了70年代以来各种编程语言的发展和变迁。历史上，曾经出现过许多的五花八门的编程语言，有些已经远离了人们的视线，成为供历史缅怀的尘埃，有些则依然活跃在现如今人们的视野中。在90年代的时候，编程语言曾经出现过一个跳跃式的发展，原因是网络的出现。下一个重大的变化趋势是什么呢？一个是函数式编程语言，另一个是并发/并行的编程语言。那作为开发者如何应对这种变化呢？Paul的答案也是简单粗暴，你去学就好了嘛。学个函数式编程语言，学个并发编程语言，体会下不同的编程思想。作为程序员，也要与时俱进。


## JDK9，变化与未来 

主讲人是来自Oracle的范学雷，主要介绍了JDK9中的一些新特性，着重介绍了模块化系统。

一些feature还是比较有意思的，比如版本号命名的变更，JDK9中将版本号的格式规定为 $MAJOR-$MINOR-$SECURITY，OP可以通过最后一位版本号来判断新公布的JDK更新是否解决了某些安全问题，来决定是否升级JDK。比如Java Shell，以前写一些简单的demo，或者测试一些api的时候，我们需要经历新建一个文件、创建个Class、再写main方法等等一系列步骤，有了Java Shell，就可以想Python、NodeJS中的shell一样，直接可以执行输入的命令。此外，还有注入对HTTP/2的支持、比如新的logging api等等feature，值得期待和尝试。

着重讲的一个是模块化框架。模块化开发可能是未来的趋势，和普通JVM程序相比，模块化、动态化得特性非常诱人。现在广泛使用的模块化规范是OSGi，但OSGi陡峭的学习曲线和使用上的复杂性，对学习者和使用者都是极大的挑战。阿里在HSF中曾经尝试使用过OSGi，最后哈市放弃了。JDK原生提供的模块化框架，是不是可以降低使用成本，为应用的开发和部署带来更大方便，还需要拭目以待。



## 基于Java容器的多应用部署技术实践 

主讲人是来自阿里的魏鹏，花名豫楚。主要带来了阿里Java容器架构，以及应用的合并部署和多版本部署等方面的分享。

随着引用的复杂度提高，我们一般会进行系统模块的拆解，将功能一个个的分离成独立的服务，各个模块以RPC的方式调用服务。这种soa的方式当然很好，但是随着复杂度继续提高，一个前端页面上的请求，有可能后端会经过很长的服务请求链路，网络开销增大。阿里的做法是合并部署，基于自己实现的Java容器，将核心请求链路上的多个应用部署在同一个容器内，将核心链路上的远程调用转为本地调用，从而降低了网络请求的开销。

基于这个Java容器，还可以做到多版本部署。在容器内，可以为一个应用部署多个版本，一个服务的标识变成了App+Version。这样当部署到新版本或者回滚老版本时候，可以做到外部的访问不断，容器内部进行请求的切分。带来的好处就是应用的发布提速、回滚可以做到秒级。

阿里的Java容器的这些特性还是比较吸引人，从双十一的数据也能看出来是经得住考验的。目前来看一是并未开源，二是相关资料较少，值得持续关注。


## OS 造成的长时间非典型 JVM GC 停顿

主讲人是来自LinkedIn的庄振运，演讲内容关注由于OS操作系统通过和JMV的跨层互动造成的JVM出现 Stop-The-World JVM GC 停顿，以及相应的优化方法。内容偏技术向和实践向，如果对于JVM优化有深入了解的话，这个演讲是很有收获的。

## 高盛如何使用Java 

主讲人来自是来自高盛的林文。演讲挺水的，从演讲质量和内容都很难令人满意，虽然她是这次专题中title最高的一位。主要介绍 Eclipse Collections 这个集合框架。

